"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/guacamole.tips/index.html","968680da24c19185ebeb115f646d648c"],["/guacamole.tips/static/css/main.ed852547.css","aa82a9f86e693b278f84acd128f8f3e6"],["/guacamole.tips/static/js/main.82aed9d9.js","c3001c29f0e2de462caa5427ddcde978"],["/guacamole.tips/static/media/Cut.f6f02e1d.png","f6f02e1d82d2532b31a682d48dcc8285"],["/guacamole.tips/static/media/Day.3ba2b583.jpg","3ba2b58394b2f3dee769ed76181965a2"],["/guacamole.tips/static/media/Four-Limes.9115a8fa.png","9115a8faf8fe99bb5c06e3c44afe0f3c"],["/guacamole.tips/static/media/Garlic.964e1159.png","964e1159e4f1a9bf969da036aeebf20f"],["/guacamole.tips/static/media/Good.df906cff.png","df906cffe1221774f1a9cc0ea8dade7e"],["/guacamole.tips/static/media/Green-avocados.d7225392.png","d72253923386dceb54c8fc97b56016dd"],["/guacamole.tips/static/media/Half-limes.9a48ec39.png","9a48ec3941e9687a7e97242420024a09"],["/guacamole.tips/static/media/Lights.a097bbba.png","a097bbbab44d1cbc1cce8c1e105052a0"],["/guacamole.tips/static/media/Lime-wedge.80d895f1.png","80d895f153858e7236dbbcbb86a3abbb"],["/guacamole.tips/static/media/Microwave.2bc8bc1b.png","2bc8bc1bd506d5d5e08c24c2c0130859"],["/guacamole.tips/static/media/Night.0841805a.jpg","0841805a18c246cd3538aa6ae4f212f8"],["/guacamole.tips/static/media/Onion.1cf08eb1.png","1cf08eb1919734e59942a632e13ccfd0"],["/guacamole.tips/static/media/Pitted-avocados.80fa094c.png","80fa094c99b406d7ee270f81ecc403bf"],["/guacamole.tips/static/media/Tomato.5080e991.png","5080e991772d76e2a9e8fa90df54ad91"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),a=urlsToCacheKeys.has(t));var c="/guacamole.tips/index.html";!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL(c,self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});